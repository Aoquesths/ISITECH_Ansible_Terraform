---
- name: Install Nginx
  apt:
    name: nginx
    state: present
  become: true

- name: Backup default nginx config
  copy:
    src: /etc/nginx/nginx.conf
    dest: /etc/nginx/nginx.conf.orig
    remote_src: true
  become: true
  ignore_errors: true

- name: Deploy custom nginx.conf
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: Restart nginx
  become: true

- name: Remove default site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: true
  notify: Reload nginx

- name: Deploy vhosts
  template:
    src: vhost.conf.j2
    dest: "/etc/nginx/sites-available/{{ item.server_name }}.conf"
  loop: "{{ nginx.vhosts }}"
  become: true

- name: Enable vhosts
  file:
    src: "/etc/nginx/sites-available/{{ item.server_name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.server_name }}.conf"
    state: link
  loop: "{{ nginx.vhosts }}"
  become: true
  notify: Reload nginx

- block:
    - name: Test nginx syntax
      command: nginx -t
      become: true

    - name: Ensure nginx running
      service:
        name: nginx
        state: started
        enabled: true
      become: true
  rescue:
    - name: Restore original nginx.conf on failure
      copy:
        src: /etc/nginx/nginx.conf.orig
        dest: /etc/nginx/nginx.conf
        remote_src: true
      become: true
    - name: Abort play for this host
      fail:
        msg: "Nginx configuration failed on {{ inventory_hostname }}"
  always:
    - name: Display current nginx version
      command: nginx -v
      register: nginx_version
      failed_when: false
      changed_when: false
      become: true
    - debug:
        var: nginx_version.stderr

- name: Health check (HTTP)
  uri:
    url: "http://127.0.0.1"
    return_content: false
  register: health
  retries: 5
  delay: 2
  until: health.status == 200
